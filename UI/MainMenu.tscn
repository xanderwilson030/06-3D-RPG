[gd_scene load_steps=10 format=2]

[ext_resource path="res://UI/MainMenu.gd" type="Script" id=1]
[ext_resource path="res://icon.png" type="Texture" id=2]
[ext_resource path="res://Assets/Jellee-Bold.otf" type="DynamicFontData" id=3]
[ext_resource path="res://Assets/MASS EFFECT 1 - Main menu theme.wav" type="AudioStream" id=4]

[sub_resource type="Shader" id=6]
code = "shader_type canvas_item;

uniform vec4 BackColor : hint_color = vec4(0.0, 0.4, 0.58, 1.0);
uniform vec4 CloudColor : hint_color = vec4(0.18, 0.70, 0.87, 1.0);
uniform float speed : hint_range(0.0, 5.0) = 0.1;

const float TAU = 6.28318530718;

float Func(float pX)
{
	return 0.6*(0.5*sin(0.1*pX) + 0.5*sin(0.553*pX) + 0.7*sin(1.2*pX));
}


float FuncR(float pX)
{
	return 0.5 + 0.25*(1.0 + sin(mod(40.0*pX, TAU)));
}


float Layer(vec2 pQ, float pT)
{
	vec2 Qt = 3.5*pQ;
	pT *= 0.5;
	Qt.x += pT;

	float Xi = floor(Qt.x);
	float Xf = Qt.x - Xi -0.5;

	vec2 C;
	float Yi;
	float D = 1.0 - step(Qt.y,  Func(Qt.x));

	// Disk:
	Yi = Func(Xi + 0.5);
	C = vec2(Xf, Qt.y - Yi );
	D =  min(D, length(C) - FuncR(Xi+ pT/80.0));

	// Previous disk:
	Yi = Func(Xi+1.0 + 0.5);
	C = vec2(Xf-1.0, Qt.y - Yi );
	D =  min(D, length(C) - FuncR(Xi+1.0+ pT/80.0));

	// Next Disk:
	Yi = Func(Xi-1.0 + 0.5);
	C = vec2(Xf+1.0, Qt.y - Yi );
	D =  min(D, length(C) - FuncR(Xi-1.0+ pT/80.0));

	return min(1.0, D);
}

void fragment() {
	//vec2 uv = 8.0 * (SCREEN_UV - UV * 2.0);
	vec2 uv = 3.0 * (SCREEN_UV - UV * 2.0);

	// Render:
	vec3 Color= BackColor.rgb;
	for(float J = 0.0; J <= 1.0; J += 0.2)
	{
		// Cloud Layer:
		float Lt =  TIME * speed * (0.5  + 2.0 * J) * (1.0 + 0.1 * sin(226.0 * J)) + 17.0 * J;
		vec2 Lp = vec2(0.0, 0.3 + 1.5 * ( J - 0.5));
		float L = Layer(uv + Lp, Lt);
		// Blur and color:
		float Blur = 4.0 * (0.5 * abs(2.0 - 5.0 * J)) / (11.0 - 5.0 * J);
		float V = mix( 0.0, 1.0, 1.0 - smoothstep( 0.0, 0.01 +0.2 * Blur, L ) );
		vec3 Lc=  mix(CloudColor.rgb, vec3(1.0), J);
		Color =mix(Color, Lc,  V);
	}
	COLOR = vec4(Color,1.);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 6 )
shader_param/BackColor = Color( 0, 0.239216, 0.356863, 1 )
shader_param/CloudColor = Color( 0, 0.0509804, 0.0666667, 1 )
shader_param/speed = 1.628

[sub_resource type="DynamicFont" id=3]
size = 50
outline_size = 5
outline_color = Color( 0, 0, 0, 1 )
font_data = ExtResource( 3 )

[sub_resource type="DynamicFont" id=4]
size = 35
outline_size = 5
outline_color = Color( 0, 0, 0, 1 )
font_data = ExtResource( 3 )

[sub_resource type="DynamicFont" id=5]
size = 40
outline_size = 5
outline_color = Color( 0, 0, 0, 1 )
font_data = ExtResource( 3 )

[node name="Menu" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
rect_clip_content = true
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 2 )
scale = Vector2( 15.9574, 9.4371 )
texture = ExtResource( 2 )
centered = false

[node name="Background" type="ColorRect" parent="."]
margin_left = -11.0
margin_top = -14.0
margin_right = 1063.0
margin_bottom = 620.0
color = Color( 0, 0, 0, 0.501961 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="."]
margin_left = 134.559
margin_top = -67.8949
margin_right = 902.559
margin_bottom = 545.105
custom_fonts/font = SubResource( 3 )
text = "Space Station Cleanup
"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Quit" type="Button" parent="."]
modulate = Color( 1, 0.984314, 0.984314, 1 )
margin_left = 414.397
margin_top = 453.921
margin_right = 601.397
margin_bottom = 508.921
custom_fonts/font = SubResource( 4 )
text = "Quit"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Play" type="Button" parent="."]
margin_left = 357.661
margin_top = 355.401
margin_right = 661.661
margin_bottom = 433.401
custom_fonts/font = SubResource( 5 )
text = "Play"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Background Music" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 4 )
autoplay = true

[connection signal="pressed" from="Quit" to="." method="_on_Quit_pressed"]
[connection signal="pressed" from="Play" to="." method="_on_Play_pressed"]
